
server {
    server_name glitchtip.${HOSTNAME};
    client_max_body_size 40M;

    # Listen to port 443 on both IPv4 and IPv6.
    listen 443 ssl;
    listen [::]:443 ssl;

    # https://github.com/JonasAlfredsson/docker-nginx-certbot/blob/master/examples/example_server.conf
    # Load the certificate files.
    ssl_certificate         /etc/letsencrypt/live/${HOSTNAME}/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/${HOSTNAME}/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/${HOSTNAME}/chain.pem;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;


    location / {
        proxy_pass http://glitchtip-web;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server {
    server_name ${HOSTNAME};

    # Listen to port 443 on both IPv4 and IPv6.
    listen 443 ssl;
    listen [::]:443 ssl;

    # https://github.com/JonasAlfredsson/docker-nginx-certbot/blob/master/examples/example_server.conf
    # Load the certificate files.
    ssl_certificate         /etc/letsencrypt/live/${HOSTNAME}/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/${HOSTNAME}/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/${HOSTNAME}/chain.pem;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;


    # Increased from the default value to acommodate large cookies during oAuth2 flows
    # like in https://meta.discourse.org/t/x/74060 and large CSP and Link (preload) headers
    proxy_buffer_size 16k;
    proxy_buffers 4 16k;

    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_comp_level 5;
    gzip_types application/json text/css text/javascript application/x-javascript application/javascript image/svg+xml application/wasm;
    gzip_proxied any;

    server_tokens off;
    keepalive_timeout 65;

    # maximum file upload size (keep up to date when changing the corresponding site setting)
    client_max_body_size 10m;


    # without weak etags we get zero benefit from etags on dynamically compressed content
    # further more etags are based on the file in nginx not sha of data
    # use dates, it solves the problem fine even cross server
    etag off;

    location / {
        add_header ETag "";

        proxy_set_header Host $http_host;
        proxy_set_header X-Request-Start "t=${msec}";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://web:3000;
    }
}



# https://min.io/docs/minio/linux/integrations/setup-nginx-proxy-with-minio.html
server {
    server_name assets.${HOSTNAME};

    # Listen to port 443 on both IPv4 and IPv6.
    listen 443 ssl;
    listen [::]:443 ssl;


    # Load the certificate files.
    ssl_certificate         /etc/letsencrypt/live/${HOSTNAME}/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/${HOSTNAME}/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/${HOSTNAME}/chain.pem;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;


    # To allow special characters in headers
    ignore_invalid_headers off;
    # Allow any size file to be uploaded.
    # Set to a value such as 1000m; to restrict file size to a specific value
    client_max_body_size 0;
    # To disable buffering
    proxy_buffering off;
    proxy_request_buffering off;

    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;

        proxy_connect_timeout 300;
        # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        chunked_transfer_encoding off;

        proxy_pass http://minio;
    }
}

server {
    # Drop any request that does not match any of the other server names.
    listen               443 ssl default_server;
    ssl_reject_handshake on;
}
