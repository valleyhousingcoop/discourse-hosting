services:
  db:
    image: postgres
    environment:
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  redis:
    image: redis/redis-stack:latest
    ports:
      - "8001:8001"
      - "6379:6379"
    environment:
        REDIS_ARGS: --requirepass password
    volumes:
      - redis:/data
  web:
    image: discourse
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - DISCOURSE_HOSTNAME=${HOSTNAME}
        - DISCOURSE_S3_CDN_URL=http://assets.${HOSTNAME}
    environment:
      - DISCOURSE_DB_HOST=db
      - DISCOURSE_DB_PORT=5432
      - DISCOURSE_DB_NAME=postgres
      - DISCOURSE_DB_USERNAME=postgres
      - DISCOURSE_DB_PASSWORD=password
      - DISCOURSE_REDIS_HOST=redis
      - DISCOURSE_REDIS_PASSWORD=password
      - DISCOURSE_DEVELOPER_EMAILS=${EMAIL}
      - DISCOURSE_SMTP_DOMAIN=${EMAIL_DOMAIN}
      - DISCOURSE_SMTP_PASSWORD=${SEND_GRID_API_KEY}
      - EMAIL_ADDRESS=${EMAIL_ADDRESS}
      - DISCOURSE_NOTIFICATION_EMAIL=${DISCOURSE_NOTIFICATION_EMAIL}
      - DISCOURSE_S3_ACCESS_KEY_ID=minioadmin
      - DISCOURSE_S3_SECRET_ACCESS_KEY=minioadmin
      - DISCOURSE_S3_BUCKET=assets
      - DISCOURSE_S3_BACKUP_BUCKET=backup
      - DISCOURSE_BACKUP_LOCATION=s3
      - DISCOURSE_S3_ENDPOINT=http://${HOSTNAME}
    depends_on:
      - db
      - redis
      - minio
  # Reverse proxy to differentiate based on domain, which server to use
  nginx:
    image: nginx:latest
    ports:
      - 80:80
    entrypoint:
      - bash
      - "-c"
      - >
        set -ex &&
        echo '
        events {

        }
        http {
          server {
              listen 80;
              server_name assets.${HOSTNAME:?err};
              location / {
                  proxy_set_header Host $$http_host;
                  proxy_pass http://minio;
              }
          }
          server {
              listen 80;
              server_name ${HOSTNAME:?err};
              location / {
                  proxy_set_header Host $$http_host;
                  proxy_pass http://web:3000;
              }
          }
        }' > /etc/nginx/nginx.conf &&
        nginx -g 'daemon off;'
    depends_on:
      - web
      - minio
  minio:
    build:
      context: .
      dockerfile: minio.Dockerfile
    ports:
      - "9001:9001"
    volumes:
      - minio:/data
    environment:
      MINIO_DOMAIN: "${HOSTNAME:?err}"
    networks:
      default:
        aliases:
          - assets.${HOSTNAME:?err}
          - backup.${HOSTNAME:?err}

networks:
  default:
volumes:
  postgres:
  redis:
  minio:
